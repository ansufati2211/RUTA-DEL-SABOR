spring.application.name=ruta
spring.datasource.url=jdbc:postgresql://localhost:5432/rutavero
spring.datasource.username=postgres
spring.datasource.password=ansu2211
spring.datasource.driver-class-name=org.postgresql.Driver
# Cambiar temporalmente de "update" a "create" o "create-drop"
spring.jpa.hibernate.ddl-auto=create

# Después de que funcione, volver a "update"
# spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# Configuracion JWT
# ¡IMPORTANTE! Genera una clave segura Base64 (puedes usar generadores online o el código comentado en JwtUtil)
# y reemplaza este valor. ¡NO USES ESTA CLAVE DE EJEMPLO EN PRODUCCIÓN!
jwt.secret=Z2FicmllbGRpZWdvamVzdXNqaG9qYW5sZWFuZHJvcmljYXJkbzIyMjIyNzI1MTEwNTA2
# Expiración en milisegundos (ej: 10 horas = 36000000)
jwt.expiration=36000000

# Opcional: Logging level (más detalles en desarrollo)
logging.level.org.springframework=INFO
# Más detalle para tu código
logging.level.com.RutaDelSabor.ruta=DEBUG
# Ver SQL generado
logging.level.org.hibernate.SQL=DEBUG
# Ver parámetros de SQL
logging.level.org.hibernate.type.descriptor.sql=TRACE